---
apiVersion: velero.io/v1
kind: Backup
metadata:
  annotations:
    lca.openshift.io/apply-label: "{% for r in resources.cluster.customresourcedefinitions %}apiextensions.k8s.io/v1/customresourcedefinition/{{r}},{% endfor %}{% for scc in resources.cluster.securitycontextconstraints %}security.openshift.io/v1/securitycontextconstraints/{{scc}},{% endfor %}{% for cr in resources.cluster.clusterroles %}rbac.authorization.k8s.io/v1/clusterroles/{{cr}},{% endfor %}{% for crb in resources.cluster.clusterrolebindings %}rbac.authorization.k8s.io/v1/clusterrolebindings/{{crb}}{{ "," if not loop.last else "" }}{% endfor %}"
  name: backup-{{ app.name }}-cluster-resources
  labels:
    velero.io/storage-location: default
  namespace: openshift-adp
spec:
  includedClusterScopedResources:
  {% for r in resources.cluster.keys() -%}
  - {{r}}
  {% endfor %}


---
apiVersion: velero.io/v1
kind: Backup
metadata:
  labels:
    velero.io/storage-location: default
  name: backup-{{ app.name }}-namespaced-resources
  namespace: openshift-adp
spec:
  includedNamespaces:
  - {{ app.namespace }}
  includedNamespaceScopedResources:
  {% for r in resources.namespaced -%}
  - {{ r }}
  {% endfor -%}

  excludedClusterScopedResources:
  {% for r in resources.excluded -%}
  - {{ r }}
  {% endfor %}


---
apiVersion: velero.io/v1
kind: Restore
metadata:
  name: restore-{{ app.name }}-cluster-resources
  namespace: openshift-adp
  labels:
    velero.io/storage-location: default
  annotations:
    lca.openshift.io/apply-wave: "2"
spec:
  backupName:
    backup-{{ app.name }}-cluster-resources


---
apiVersion: velero.io/v1
kind: Restore
metadata:
  name: restore-{{ app.name }}-namespaced-resources
  namespace: openshift-adp
  labels:
    velero.io/storage-location: default
  annotations:
    lca.openshift.io/apply-wave: "3"
spec:
  backupName:
    backup-{{ app.name }}-namespaced-resources

